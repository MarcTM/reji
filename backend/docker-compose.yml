version: "3"

services:
  rest:
    image: mhart/alpine-node:8
    command: npm run dev
    restart: on-failure
    working_dir: /app
    volumes:
      - ./rest:/app
    ports:
      - "3001:3001"
    links: 
      - 'mongo'
    depends_on:
      - 'mongo'

  graphql:
    image: mhart/alpine-node:8
    command: npm run dev
    restart: on-failure
    working_dir: /app
    volumes:
      - ./graphql:/app
    ports:
      - "3002:3002"
    links: 
      - 'mongo'
    depends_on:
      - 'mongo'
    
  prisma:
    image: prismagraphql/prisma:1.34
    ports:
      - '4466:4466'
    environment:
      PRISMA_CONFIG: |
        port: 4466
        databases:
          default:
            connector: mongo
            database: conduit_nodejs
            uri: mongodb://mongo/conduit_nodejs
    links: 
      - 'mongo'
    depends_on:
      - 'mongo'

  prismabackend:
    image: mhart/alpine-node:8
    command: sh -c "npm run deploy && npm run dev"
    working_dir: /app
    volumes:
      - ./prisma:/app
    ports:
      - "3003:3003"
    links: 
      - 'prisma'
      - 'mongo'
    depends_on:
      - 'prisma'
      - 'mongo'

  api:
    image: alpine-node:8
    command: npm start
    working_dir: /app
    volumes:
      - "./moleculer:/app"
    env_file: ./moleculer/docker-compose.env
    environment:
      NODE_ENV: production
      SERVICES: api
      PORT: 3000
    links:
      - redis
    depends_on:
      - redis
    labels:
      - "traefik.enable=true"   
      - "traefik.backend=api"
      - "traefik.port=3000"
      - "traefik.frontend.entryPoints=http"
      - "traefik.frontend.rule=PathPrefix:/"
    #deploy:
    #  replicas: 2

  articles:
    image: alpine-node:8
    command: npm start
    working_dir: /app
    volumes:
      - "./moleculer:/app"
    env_file: ./moleculer/docker-compose.env
    environment:
      NODE_ENV: production
      SERVICES: articles
    links:
      - redis
      - mongo
    depends_on:
      - redis
      - mongo
    #deploy:
    #  replicas: 2

  adventures:
    image: alpine-node:8
    command: npm start
    working_dir: /app
    volumes:
      - "./moleculer:/app"
    env_file: ./moleculer/docker-compose.env
    environment:
      NODE_ENV: production
      SERVICES: adventures
    links:
      - redis
      - mongo
    depends_on:
      - redis
      - mongo
    #deploy:
    #  replicas: 2

  redis:
    image: redis:alpine

  mongo:
    image: mvertes/alpine-mongo
    volumes:
      - /var/lib/mongodb:/data/db

  traefik:
    image: traefik:v1.7
    # command: --web --docker --docker.domain=docker.localhost --logLevel=INFO --docker.exposedbydefault=false
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./moleculer/traefik/traefik.toml:/traefik.toml
